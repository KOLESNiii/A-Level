{
  "intents": [
    {
      "tag": "greeting",
      "patterns": [
        "Hi",
        "How are you",
        "Is anyone there?",
        "Hello",
        "Good day"
      ],
      "responses": [
        "Hello, thanks for visiting",
        "Good to see you again",
        "Hi there, how can I help?"
      ],
      "context_set": ""
    },
    {
      "tag": "goodbye",
      "patterns": [
        "Bye",
        "See you later",
        "Goodbye"
      ],
      "responses": [
        "See you later, thanks for visiting",
        "Have a nice day",
        "Bye! Come back again soon."
      ]
    },
    {
      "tag": "thanks",
      "patterns": [
        "Thanks",
        "Thank you",
        "That's helpful"
      ],
      "responses": [
        "Happy to help!",
        "Any time!",
        "My pleasure"
      ]
    },
    {
      "tag": "specification",
      "patterns": [
        "specification",
        "spec",
        "overview of the specification",
        "key topics"
      ],
      "responses": [
        "Here is an overview of the course\n 1.1 Systems architecture\n 1.2 Memory and storage\n 1.3 Computer networks, connections and protocols\n 1.4 Network security\n 1.5 Systems software\n 1.6 Ethical, legal, cultural and environmental impacts of digital technology\n\n 2.1 Algorithms\n 2.2 Programming fundamentals\n 2.3 Producing robust programs\n 2.4 Boolean logic\n 2.5 Programming languages and Integrated Development Environments\n\nFeel free to ask about any topic in particular\n\nYou can access the full specification here: \nhttps://www.ocr.org.uk/Images/558027-specification-gcse-computer-science-j277.pdf"
      ]
    },
    {
      "tag": "calculator",
      "patterns": [
        "calculator?"
      ],
      "responses": [
        "No, calculators are not allowed."
      ]
    },
    {
      "tag": "teachers",
      "patterns": [
        "Who teaches computer science?",
        "Who will be my teacher?",
        "Who is in the computer science department?"
      ],
      "responses": [
        "Mr Timmins (Lord Timmins of Mobberley), Mr Smith, Mr Cummins and Mr Carr are the 4 GCSE Computer Science teachers. You may be taught by any of them."
      ]
    },
    {
      "tag": "purpose",
      "patterns": [
        "Why should I study computer science?",
        "What are the aims of computer science?",
        "What are the aims of the course?",
        "What are the benefits of taking computer science?"
      ],
      "responses": [
        "The course will encourage you to think creatively, innovatively, analytically, logically and critically. \nYou will also understand the components that make up digital systems, and how they communicate with one another and with other systems.\nYou will understand the impacts of digital technology to the individual and to wider society"
      ]
    },
    {
      "tag": "learning",
      "patterns": [
        "What will I learn?",
        "What will I be studying?",
        "What will I be doing?",
        "What will I be doing in computer science?"
      ],
      "responses": [
        "By the end of the course, you will be able to understand and apply the fundamental principles and concepts of Computer Science:\n   abstraction\n   decomposition\n   logic\n   algorithms\n   data representation\nYou will also be able to analyse problems in computational terms through practical experience of solving such problems,\nThis includes designing, writing and debugging programs\nFeel free to ask about the specification or any topic in particular."
      ]
    },
    {
      "tag": "exam",
      "patterns": [
        "What is the exam like?",
        "How long is the exam?",
        "How many questions are there?",
        "exam format"
      ],
      "responses": [
        "There are two papers: one focusing on computer systems and one with a focus on programming, computational thinking, and algorithms.\nEach paper is 1 hour 30 minutes long and is worth 50% of the total GCSE grade. There are 80 marks available in each paper.\nYou also have to undertake a non-examined assessment programming task. You must use one or more high-level programming languages: \n   Python\n   C family of languages (C#, C++, etc.)\n   Java\n   JavaScript\n   Visual Basic/.Net\n   PHP\n   Delphi\n   BASIC\nFeel free to ask about the assessment objectives or any topic in particular."
      ]
    },
    {
      "tag": "grades",
      "patterns": [
        "grades",
        "What are the average grades at AGSB?",
        "What grades do people get at AGSB?",
        "What grades do people get in computer science?",
        "What grades do people get in GCSE computer science?"
      ],
      "responses": []
    },
    {
      "tag": "ALevels",
      "patterns": [
        "A level",
        "Does this tie in to A Level computer science?",
        "Will this help me with A Level computer science?",
        "Will this help me with A Level?",
        "Will this help me with A Levels?",
        "Will this help me with A Levels computer science?",
        "Is this necessary for A Level computer science?"
      ],
      "responses": [
        "Yes, this course will help you with A Level computer science, as many A Level topics are continuations of GCSE topics. However, taking GCSE computer science is not a requirement for taking A Level computer science."
      ]
    },
    {
      "tag": "AOs",
      "patterns": [
        "assessment objectives",
        "What are the assessment objectives?",
        "What are the assessment objectives for the exam?",
        "What are the assessment objectives for the non-examined assessment?",
        "What are the assessment objectives for the programming task?",
        "How do I get the marks in an exam?"
      ],
      "responses": [
        "Assessment Objective 1\nDemonstrate knowledge and understanding of the key concepts and principles of Computer Science\n\nAssessment Objective 2\nApply knowledge and understanding of key concepts and principles of Computer Science\n\nAssessment Objective 3\nAnalyse problems in computational terms:\nâ€¢to make reasoned judgements\nâ€¢to design, program, evaluate and refine solutions."
      ]
    },
    {
      "tag": "1.1.1 Architecture of the CPU",
      "patterns": [
        "1.1.1 Architecture of the CPU",
        "1.1.1",
        "Architecture of the CPU"
      ],
      "responses": [
        "The purpose of the CPU:\nThe fetch-execute cycle\nCommon CPU components and their function:\nALU (Arithmetic Logic Unit)\nCU (Control Unit)\nCache\nRegisters\nVon Neumann architecture:\nMAR (Memory Address Register)\nMDR (Memory Data Register)\nProgram Counter\nAccumulator"
      ]
    },
    {
      "tag": "1.1.2 CPU performance",
      "patterns": [
        "1.1.2 CPU performance",
        "1.1.2",
        "CPU performance"
      ],
      "responses": [
        "How common characteristics of CPUs affect their performance:\nClock speed\nCache size\nNumber of cores"
      ]
    },
    {
      "tag": "1.1.3 Embedded systems",
      "patterns": [
        "1.1.3 Embedded systems",
        "1.1.3",
        "Embedded systems"
      ],
      "responses": [
        "The purpose and characteristics of embedded systems\nExamples of embedded systems"
      ]
    },
    {
      "tag": "1.2.1 Primary storage (Memory)",
      "patterns": [
        "1.2.1 Primary storage (Memory)",
        "1.2.1",
        "Primary storage (Memory)"
      ],
      "responses": [
        "The need for primary storage\nThe difference between RAM and ROM\nThe purpose of\nROM in a computer system\nThe purpose of RAM in a computer system\nVirtual memory"
      ]
    },
    {
      "tag": "1.2.2 Secondary storage",
      "patterns": [
        "1.2.2 Secondary storage",
        "1.2.2",
        "Secondary storage"
      ],
      "responses": [
        "The need for secondary storage\nCommon types of storage:\n   Optical\n   Magnetic\n   Solid state\nSuitable storage devices and storage media for a given application\nThe advantages and disadvantages of different storage devices and storage media relating to these characteristics:\n   Capacity\n   Speed\n   Portability\n   Durability\n   Reliability\n   Cost"
      ]
    },
    {
      "tag": "1.2.3 Units",
      "patterns": [
        "1.2.3 Units",
        "1.2.3",
        "Units"
      ],
      "responses": [
        "The units of data storage:\n   Bit\n   Nibble (4 bits)\n   Byte (8 bits)\n   Kilobyte (1,000 bytes or 1 KB)\n   Megabyte (1,000 KB)\n   Gigabyte (1,000 MB)\n   Terabyte (1,000 GB)\n   Petabyte (1,000 TB)\nHow data needs to be converted into a binary format to be processed by a computer\nData capacity and calculation of data capacity requirements"
      ]
    },
    {
      "tag": "1.2.4 Data storage",
      "patterns": [
        "1.2.4 Data storage",
        "1.2.4",
        "Data storage"
      ],
      "responses": [
        "Numbers\nHow to convert positive denary whole numbers to binary numbers (up to and including 8 bits) and vice versa\nHow to add two binary integers together (up to and including 8 bits) and explain overflow errors which may occur\nHow to convert positive denary whole numbers into 2-digit\nhexadecimal numbers and vice versa\nHow to convert binary integers to their hexadecimal equivalents and vice versa\nBinary shifts\n\nCharacters\nThe use of binary codes to represent characters\nThe term 'character set'\nThe relationship between the number of bits per character in a\ncharacter set, and the number of characters which can be\nrepresented, e.g.:\n   ASCII\n   Unicode\n\nImages\nHow an image is represented as a series of pixels, represented in binary\nMetadata\nThe effect of colour depth and resolution on:\n   The quality of the image\n   The size of an image file\n\nSound\nHow sound can be sampled and stored in digital form\nThe effect of sample rate, duration and bit depth on:\n   The playback quality\n   The size of a sound file"
      ]
    },
    {
      "tag": "1.2.5 Compression",
      "patterns": [
        "1.2.5 Compression",
        "1.2.5",
        "Compression"
      ],
      "responses": [
        "The need for compression\nTypes of compression:\n   Lossy\n   Lossless"
      ]
    },
    {
      "tag": "1.3.1 Networks and topologies",
      "patterns": [
        "1.3.1 Networks and topologies",
        "1.3.1",
        "Networks and topologies"
      ],
      "responses": [
        "Types of network:\n   LAN (Local Area Network)\n   WAN (Wide Area Network)\nFactors that affect the performance of networks\nThe different roles of computers in a client-server and a peer-topeer network\nThe hardware needed to connect stand-alone computers into a Local Area Network:\n   Wireless access points\n   Routers\n   Switches\n   NIC (Network Interface Controller/Card)\n   Transmission media\nThe Internet as a worldwide collection of computer networks:\n   DNS (Domain Name Server)\n   Hosting\n   The Cloud\n   Web servers and clients\nStar and Mesh network topologies"
      ]
    },
    {
      "tag": "1.3.2 Wired and wireless networks, protocols and layers",
      "patterns": [
        "1.3.2 Wired and wireless networks, protocols and layers",
        "1.3.2",
        "Wired and wireless networks, protocols and layers"
      ],
      "responses": [
        "Modes of connection:\n   Wired\n   Ethernet\n   Wireless\n   Wi-Fi\n   Bluetooth\nEncryption\nIP addressing and MAC addressing\nStandards\nCommon protocols including:\n   TCP/IP (Transmission Control Protocol/Internet Protocol)\n   HTTP (Hyper Text Transfer Protocol)\n   HTTPS (Hyper Text Transfer Protocol Secure)\n   FTP (File Transfer Protocol)\n   POP (Post Office Protocol)\n   IMAP (Internet Message Access Protocol)\n   SMTP (Simple Mail Transfer Protocol)\nThe concept of layers"
      ]
    },
    {
      "tag": "1.4.1 Threats to computer systems and networks",
      "patterns": [
        "1.4.1 Threats to computer systems and networks",
        "1.4.1",
        "Threats to computer systems and networks"
      ],
      "responses": [
        "Forms of attack:\n   Malware\n   Social engineering, e.g. phishing, people as the 'weak point'\n   Brute-force attacks\n   Denial of service attacks\n   Data interception and theft\n   The concept of SQL injection"
      ]
    },
    {
      "tag": "1.4.2 Identifying and preventing vulnerabilities",
      "patterns": [
        "1.4.2 Identifying and preventing vulnerabilities",
        "1.4.2",
        "Identifying and preventing vulnerabilities"
      ],
      "responses": [
        "Common prevention methods:\n   Penetration testing\n   Anti-malware software\n   Firewalls\n   User access levels\n   Passwords\n   Encryption\n   Physical security"
      ]
    },
    {
      "tag": "1.5.1 Operating systems",
      "patterns": [
        "1.5.1 Operating systems",
        "1.5.1",
        "Operating systems",
        "OS"
      ],
      "responses": [
        "The purpose and functionality of operating systems:\n   User interface\n   Memory management and multitasking\n   Peripheral management and drivers\n   User management\n   File management"
      ]
    },
    {
      "tag": "1.5.2 Utility software",
      "patterns": [
        "1.5.2 Utility software",
        "1.5.2",
        "Utility software"
      ],
      "responses": [
        "The purpose and functionality of utility software\nUtility system software:\n   Encryption software\n   Defragmentation\n   Data compression"
      ]
    },
    {
      "tag": "1.6.1 Ethical, legal, cultural and environmental impact",
      "patterns": [
        "1.6.1 Ethical, legal, cultural and environmental impact",
        "1.6.1",
        "Ethical, legal, cultural and environmental impact"
      ],
      "responses": [
        "Impacts of digital technology on wider society including:\n   Ethical issues\n   Legal issues\n   Cultural issues\n   Environmental issues\n   Privacy issues\nLegislation relevant to Computer Science:\n   The Data Protection Act 2018\n   Computer Misuse Act 1990\n   Copyright Designs and Patents Act 1988\n   Software licences (i.e. open source and proprietary)"
      ]
    },
    {
      "tag": "2.1.1 Computational thinking",
      "patterns": [
        "2.1.1 Computational thinking",
        "2.1.1",
        "Computational thinking"
      ],
      "responses": [
        "Principles of computational thinking:\n   Abstraction\n   Decomposition\n   Algorithmic thinking"
      ]
    },
    {
      "tag": "2.1.2 Designing, creating and refining algorithms",
      "patterns": [
        "2.1.2 Designing, creating and refining algorithms",
        "2.1.2",
        "Designing, creating and refining algorithms"
      ],
      "responses": [
        "Identify the inputs, processes, and outputs for a problem\nStructure diagrams\nCreate, interpret, correct, complete, and refine algorithms using:\n   Pseudocode\n   Flowcharts\n   Reference language/high-level programming language\nIdentify common errors\nTrace tables"
      ]
    },
    {
      "tag": "2.1.3 Searching and sorting algorithms",
      "patterns": [
        "2.1.3 Searching and sorting algorithms",
        "2.1.3",
        "Searching and sorting algorithms"
      ],
      "responses": [
        "Standard searching algorithms:\n   Binary search\n   Linear search\nStandard sorting algorithms:\n   Bubble sort\n   Merge sort\n   Insertion sort"
      ]
    },
    {
      "tag": "2.2.1 Programming fundamentals",
      "patterns": [
        "2.2.1 Programming fundamentals",
        "2.2.1",
        "Programming fundamentals"
      ],
      "responses": [
        "The use of variables, constants, operators, inputs, outputs and assignments\nThe use of the three basic programming constructs used to control the flow of a program:\n   Sequence\n   Selection\n   Iteration (count- and condition-controlled loops)\nThe common arithmetic operators\nThe common Boolean operators AND, OR and NOT"
      ]
    },
    {
      "tag": "2.2.2 Data types",
      "patterns": [
        "2.2.2 Data types",
        "2.2.2",
        "Data types"
      ],
      "responses": [
        "The use of data types:\n   Integer\n   Real\n   Boolean\n   Character and string\n   Casting"
      ]
    },
    {
      "tag": "2.2.3 Additional programming techniques",
      "patterns": [
        "2.2.3 Additional programming techniques",
        "2.2.3",
        "Additional programming techniques"
      ],
      "responses": [
        "The use of basic string manipulation\nThe use of basic file handling operations:\n   Open\n   Read\n   Write\n   Close\nThe use of records to store data\nThe use of SQL to search for data\nThe use of arrays (or equivalent) when solving problems, including both one-dimensional (1D) and two-dimensional arrays (2D)\nHow to use sub programs (functions and procedures) to produce\nstructured code\nRandom number generation"
      ]
    },
    {
      "tag": "2.3.1 Defensive design",
      "patterns": [
        "2.3.1 Defensive design",
        "2.3.1",
        "Defensive design"
      ],
      "responses": [
        "Defensive design considerations:\n   Anticipating misuse\n   Authentication\nInput validation\nMaintainability:\n   Use of sub programs\n   Naming conventions\n   Indentation\n   Commenting"
      ]
    },
    {
      "tag": "2.3.2 Testing",
      "patterns": [
        "2.3.2 Testing",
        "2.3.2",
        "Testing"
      ],
      "responses": [
        "The purpose of testing\nTypes of testing:\n   Iterative\n   Final/terminal\nIdentify syntax and logic errors\nSelecting and using suitable test data:\n   Normal\n   Boundary\n   Invalid/Erroneous\nRefining algorithms"
      ]
    },
    {
      "tag": "2.4.1 Boolean logic",
      "patterns": [
        "2.4.1 Boolean logic",
        "2.4.1",
        "Boolean logic"
      ],
      "responses": [
        "Simple logic diagrams using the operators AND, OR and NOT\nTruth tables\nCombining Boolean operators using AND, OR and NOT\nApplying logical operators in truth tables to solve problems"
      ]
    },
    {
      "tag": "2.5.1 Languages",
      "patterns": [
        "2.5.1 Languages",
        "2.5.1",
        "Languages"
      ],
      "responses": [
        "Characteristics and purpose of different levels of programming language:\n   High-level languages\n   Low-level languages\nThe purpose of translators\nThe characteristics of a compiler and an interpreter"
      ]
    },
    {
      "tag": "1.1 Systems architecture",
      "patterns": [
        "1.1 Systems architecture",
        "1.1",
        "Systems architecture"
      ],
      "responses": [
        "1.1.1 Architecture of the CPU\n1.1.2 CPU performance\n1.1.3 Embedded systems\nfeel free to ask about any of these subtopics."
      ]
    },
    {
      "tag": "1.2 Memory and storage",
      "patterns": [
        "1.2 Memory and storage",
        "1.2",
        "Memory and storage"
      ],
      "responses": [
        "1.2.1 Primary storage (Memory)\n1.2.2 Secondary storage\n1.2.3 Units\n1.2.4 Data storage\n1.2.5 Compression\nfeel free to ask about any of these subtopics."
      ]
    },
    {
      "tag": "1.3 Computer networks, connections and protocols",
      "patterns": [
        "1.3 Computer networks, connections and protocols",
        "1.3",
        "Computer networks, connections and protocols"
      ],
      "responses": [
        "1.3.1 Networks and topologies\n1.3.2 Wired and wireless networks, protocols and layers\nfeel free to ask about any of these subtopics."
      ]
    },
    {
      "tag": "1.4 Network security",
      "patterns": [
        "1.4 Network security",
        "1.4",
        "Network security"
      ],
      "responses": [
        "1.4.1 Threats to computer systems and networks\n1.4.2 Identifying and preventing vulnerabilities\nfeel free to ask about any of these subtopics."
      ]
    },
    {
      "tag": "1.5 Systems software",
      "patterns": [
        "1.5 Systems software",
        "1.5",
        "Systems software"
      ],
      "responses": [
        "1.5.1 Operating systems\n1.5.2 Utility software\nfeel free to ask about any of these subtopics."
      ]
    },
    {
      "tag": "1.6 Ethical, legal, cultural and environmental impacts of digital technology",
      "patterns": [
        "1.6 Ethical, legal, cultural and environmental impacts of digital technology",
        "1.6",
        "Ethical, legal, cultural and environmental impacts of digital technology"
      ],
      "responses": [
        "1.6.1 Ethical, legal, cultural and environmental impact\nfeel free to ask about any of these subtopics."
      ]
    },
    {
      "tag": "2.1 Algorithms",
      "patterns": [
        "2.1 Algorithms",
        "2.1",
        "Algorithms"
      ],
      "responses": [
        "2.1.1 Computational thinking\n2.1.2 Designing, creating and refining algorithms\n2.1.3 Searching and sorting algorithms\nfeel free to ask about any of these subtopics."
      ]
    },
    {
      "tag": "2.2 Programming fundamentals",
      "patterns": [
        "2.2 Programming fundamentals",
        "2.2",
        "Programming fundamentals"
      ],
      "responses": [
        "2.2.1 Programming fundamentals\n2.2.2 Data types\n2.2.3 Additional programming techniques\nfeel free to ask about any of these subtopics."
      ]
    },
    {
      "tag": "2.3 Producing robust programs",
      "patterns": [
        "2.3 Producing robust programs",
        "2.3",
        "Producing robust programs"
      ],
      "responses": [
        "2.3.1 Defensive design\n2.3.2 Testing\nfeel free to ask about any of these subtopics."
      ]
    },
    {
      "tag": "2.4 Boolean logic",
      "patterns": [
        "2.4 Boolean logic",
        "2.4",
        "Boolean logic"
      ],
      "responses": [
        "2.4.1 Boolean logic\nfeel free to ask about any of these subtopics."
      ]
    }
  ]
}